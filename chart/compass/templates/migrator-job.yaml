{{ if .Values.global.images.director.green_version }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: compass-migration
  namespace: {{ $.Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: compass-migration
  namespace: {{ $.Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: compass-migration
subjects:
  - kind: ServiceAccount
    name: compass-migration
    namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: compass-migration
  namespace: {{ .Release.Namespace }}
rules:
  - apiGroups: ["", "batch", "autoscaling", "apps"]
    resources: ["services", "deployments", "horizontalpodautoscalers", "jobs"]
    verbs: ["get", "update", "patch", "delete"]
---
{{ end }}
apiVersion: batch/v1
kind: Job
metadata:
    name: compass-migration
    labels:
        app: {{ .Chart.Name }}
        release: {{ .Release.Name }}
    annotations:
        "helm.sh/hook": post-install,post-upgrade
        "helm.sh/hook-weight": "0"
        "helm.sh/hook-delete-policy": before-hook-creation
spec:
    template:
        metadata:
            labels:
                app: {{ .Chart.Name }}
                release: {{ .Release.Name }}
        spec:
            {{ if .Values.global.isLocalEnv }}
            hostAliases:
                - ip: {{ .Values.global.minikubeIP }}
                  hostnames:
                    - "{{ .Values.global.gateway.tls.host }}.{{ .Values.global.ingress.domainName }}"
            {{ end }}
            {{ if .Values.global.images.director.green_version }}
            serviceAccountName: compass-migration
            {{ end }}
            restartPolicy: Never
            shareProcessNamespace: true
            containers:
                {{if eq .Values.global.database.embedded.enabled false}}
                - name: cloudsql-proxy
                  image: gcr.io/cloudsql-docker/gce-proxy:1.19.1-alpine
                  command:
                  - /bin/sh
                  args:
                  - -c
                  - "trap 'exit 0' SIGINT; echo 'Waiting for istio-proxy to start...' && sleep 15; /cloud_sql_proxy -instances={{ .Values.global.database.managedGCP.instanceConnectionName }}=tcp:5432 -credential_file=/secrets/cloudsql-instance-credentials/credentials.json -term_timeout=2s"
                  volumeMounts:
                      - name: cloudsql-instance-credentials
                        mountPath: /secrets/cloudsql-instance-credentials
                        readOnly: true
                {{end}}
                - name: migrator
                  image: {{ .Values.global.images.containerRegistry.path }}/{{ .Values.global.images.schema_migrator.dir }}compass-schema-migrator:{{ .Values.global.images.schema_migrator.version }}
                  imagePullPolicy: IfNotPresent
                  env:
                      - name: DB_USER
                        valueFrom:
                            secretKeyRef:
                                name: compass-postgresql
                                key: postgresql-director-username
                      - name: DB_PASSWORD
                        valueFrom:
                            secretKeyRef:
                                name: compass-postgresql
                                key: postgresql-director-password
                      - name: DB_HOST
                        valueFrom:
                            secretKeyRef:
                                name: compass-postgresql
                                key: postgresql-serviceName
                      - name: DB_PORT
                        valueFrom:
                            secretKeyRef:
                                name: compass-postgresql
                                key: postgresql-servicePort
                      - name: DB_NAME
                        valueFrom:
                            secretKeyRef:
                                name: compass-postgresql
                                key: postgresql-director-db-name
                      - name: DB_SSL
                        valueFrom:
                            secretKeyRef:
                                name: compass-postgresql
                                key: postgresql-sslMode
                      - name: MIGRATION_PATH
                        value: "director"
                      - name: "DIRECTION"
                        value: "up"

                  command:
                    - "/bin/bash"
                  args:
                    - "-c"
                    - |
                      function quit() {
                        echo 'Killing pilot-agent'
                        pkill -INT cloud_sql_proxy;

                        echo "Sending a quit request for istio-proxy and exiting..."
                        curl -XPOST http://127.0.0.1:15020/quitquitquit

                        sleep 5
                        exit $1"
                      }

                      sleep 20
                      echo "Executing migrations..."
                      ./run.sh

                      EXIT_CODE=$?
                      {{ if .Values.global.images.director.green_version }}
                      if [ $EXIT_CODE -ne 0 ]
                      then
                        echo "Migration was not succesful"
                        quit $EXIT_CODE
                      fi

                      echo "Changing services to forward traffic to new deployments..."
                      kubectl get service -n {{ .Release.Namespace }}  compass-director -o json \
                      | jq '.spec.selector.version = "{{ .Values.global.images.director.green_version | lower }}"' \
                      | kubectl replace -f -

                      EXIT_CODE=$?
                      if [ $EXIT_CODE -ne 0 ]
                      then
                        echo "Service could not be changed to forward to new deployments"
                        quit $EXIT_CODE
                      fi

                      echo "Deleting old horizonal-pod-autoscaler..."
                      kubectl delete horizontalpodautoscaler -n {{ .Release.Namespace }} compass-director-{{ .Values.global.images.director.version | lower }}

                      echo "Deleting old deployment..."
                      kubectl delete deployment -n {{ .Release.Namespace }} compass-director-{{ .Values.global.images.director.version | lower }}
                      {{ end }}
                      quit $exit_code
            {{if eq .Values.global.database.embedded.enabled false}}
            volumes:
              - name: cloudsql-instance-credentials
                secret:
                  secretName: cloudsql-instance-credentials
            {{end}}
