{{if .Values.global.openDiscoveryPuller.enabled }}
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: "compass-open-discovery-puller"
  namespace: {{ .Release.Namespace }}
spec:
  schedule: "{{ .Values.global.openDiscoveryPuller.schedule }}"
  failedJobsHistoryLimit: 5
  concurrencyPolicy: Forbid
  startingDeadlineSeconds: 60 # Fix for https://github.com/kyma-incubator/compass/issues/1155
  jobTemplate:
    metadata:
      labels:
        cronjob: open-discovery-puller
    spec:
      template:
        metadata:
          labels:
            cronjob: open-discovery-puller
        spec:
          containers:
            - name: fetcher
              image: eu.gcr.io/sap-cp-cmp-dev/compass-director:od-latest
              imagePullPolicy: IfNotPresent
              env:
                - name: APP_DB_USER
                  valueFrom:
                    secretKeyRef:
                      name: compass-postgresql
                      key: postgresql-director-username
                - name: APP_DB_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: compass-postgresql
                      key: postgresql-director-password
                - name: APP_DB_HOST
                  valueFrom:
                    secretKeyRef:
                      name: compass-postgresql
                      key: postgresql-serviceName
                - name: APP_DB_PORT
                  valueFrom:
                    secretKeyRef:
                      name: compass-postgresql
                      key: postgresql-servicePort
                - name: APP_DB_NAME
                  valueFrom:
                    secretKeyRef:
                      name: compass-postgresql
                      key: postgresql-director-db-name
                - name: APP_DB_SSL
                  valueFrom:
                    secretKeyRef:
                      name: compass-postgresql
                      key: postgresql-sslMode
                - name: APP_CONFIGURATION_FILE
                  value: /config/config.yaml
                - name: APP_DB_MAX_OPEN_CONNECTIONS
                  value: "{{ .Values.global.openDiscoveryPuller.dbPool.maxOpenConnections }}"
                - name: APP_DB_MAX_IDLE_CONNECTIONS
                  value: "{{ .Values.global.openDiscoveryPuller.dbPool.maxIdleConnections }}"
                {{ if and ($.Values.global.metrics.enabled) ($.Values.global.metrics.pushEndpoint) }}
                - name: APP_METRICS_PUSH_ENDPOINT
                  value: {{ $.Values.global.metrics.pushEndpoint}}
              {{ end }}
              volumeMounts:
                - mountPath: /config
                  name: director-config
              command:
                - "/bin/sh"
              args:
                - "-c"
                - "./odpuller; exit_code=$?; echo '# KILLING PILOT-AGENT #'; pkill -INT cloud_sql_proxy; curl -XPOST http://127.0.0.1:15020/quitquitquit; sleep 5; exit $exit_code;"
            {{if eq $.Values.global.database.embedded.enabled false}}
            - name: cloudsql-proxy
              image: gcr.io/cloudsql-docker/gce-proxy:1.14
              command:
                - /bin/sh
              args:
                - -c
                - "trap 'exit 0' SIGINT; /cloud_sql_proxy -instances={{ $.Values.global.database.managedGCP.instanceConnectionName }}=tcp:5432 -credential_file=/secrets/cloudsql-instance-credentials/credentials.json"
              volumeMounts:
                - name: cloudsql-instance-credentials
                  mountPath: /secrets/cloudsql-instance-credentials
                  readOnly: true
          {{end}}
          restartPolicy: Never
          shareProcessNamespace: true
          volumes:
            - name: director-config
              configMap:
                name: compass-director-config
          {{if eq $.Values.global.database.embedded.enabled false}}
            - name: cloudsql-instance-credentials
              secret:
                secretName: cloudsql-instance-credentials
  {{end}}
  {{ end }}